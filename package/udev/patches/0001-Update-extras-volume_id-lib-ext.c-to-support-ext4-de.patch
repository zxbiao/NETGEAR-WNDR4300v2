From 77e8edbe3bcbe99ddcaa9f155f1fe35f4bc67164 Mon Sep 17 00:00:00 2001
From: Maxwell Ye <maxwell.ye@dniserver.dnish.net>
Date: Thu, 26 Jul 2012 14:58:15 +0800
Subject: [PATCH 1/1] Update extras/volume_id/lib/ext.c to support ext4 detection

Signed-off-by: Maxwell Ye <maxwell.ye@dniserver.dnish.net>
---
 extras/volume_id/lib/ext.c |   39 +++++++++++++++++++++++++++++----------
 1 files changed, 29 insertions(+), 10 deletions(-)

diff --git a/extras/volume_id/lib/ext.c b/extras/volume_id/lib/ext.c
index 8fc7a74..924b0b0 100644
--- a/extras/volume_id/lib/ext.c
+++ b/extras/volume_id/lib/ext.c
@@ -63,8 +63,12 @@ struct ext2_super_block {
 } PACKED;
 
 #define EXT_SUPER_MAGIC				0xEF53
-#define EXT3_FEATURE_COMPAT_HAS_JOURNAL		0x00000004
-#define EXT3_FEATURE_INCOMPAT_JOURNAL_DEV	0x00000008
+#define EXT3_FEATURE_COMPAT_HAS_JOURNAL		0x0004
+#define EXT3_FEATURE_INCOMPAT_JOURNAL_DEV	0x0008
+#define EXT3_FEATURE_INCOMPAT_EXTENTS		0x0040
+#define EXT4_FEATURE_INCOMPAT_64BIT		0x0080
+#define EXT4_FEATURE_INCOMPAT_MMP		0x0100
+
 #define EXT_SUPERBLOCK_OFFSET			0x400
 
 #define EXT3_MIN_BLOCK_SIZE			0x400
@@ -74,6 +78,8 @@ int volume_id_probe_ext(struct volume_id *id, uint64_t off, uint64_t size)
 {
 	struct ext2_super_block *es;
 	size_t bsize;
+	uint32_t feature_compat;
+	uint32_t feature_incompat;
 
 	info("probing at offset 0x%llx", (unsigned long long) off);
 
@@ -94,22 +100,35 @@ int volume_id_probe_ext(struct volume_id *id, uint64_t off, uint64_t size)
 	volume_id_set_label_raw(id, es->s_volume_name, 16);
 	volume_id_set_label_string(id, es->s_volume_name, 16);
 	volume_id_set_uuid(id, es->s_uuid, UUID_DCE);
-	snprintf(id->type_version, sizeof(id->type_version)-1,
-		 "%u.%u", es->s_rev_level, es->s_minor_rev_level);
+	snprintf(id->type_version, sizeof(id->type_version)-1, "%u.%u",
+		 le32_to_cpu(es->s_rev_level), le16_to_cpu(es->s_minor_rev_level));
+
+	feature_compat = le32_to_cpu(es->s_feature_compat);
+	feature_incompat = le32_to_cpu(es->s_feature_incompat);
 
 	/* check for external journal device */
-	if ((le32_to_cpu(es->s_feature_incompat) & EXT3_FEATURE_INCOMPAT_JOURNAL_DEV) != 0) {
+	if ((feature_incompat & EXT3_FEATURE_INCOMPAT_JOURNAL_DEV) != 0) {
 		volume_id_set_usage(id, VOLUME_ID_OTHER);
 		id->type = "jbd";
-		return 0;
+		goto out;
 	}
 
-	/* check for ext2 / ext3 */
 	volume_id_set_usage(id, VOLUME_ID_FILESYSTEM);
-	if ((le32_to_cpu(es->s_feature_compat) & EXT3_FEATURE_COMPAT_HAS_JOURNAL) != 0)
+
+	if ((feature_incompat & EXT3_FEATURE_INCOMPAT_EXTENTS) != 0 ||
+	    (feature_incompat & EXT4_FEATURE_INCOMPAT_64BIT) != 0 ||
+	    (feature_incompat & EXT4_FEATURE_INCOMPAT_MMP) != 0) {
+		id->type = "ext4";
+		goto out;
+	}
+
+	if ((feature_compat & EXT3_FEATURE_COMPAT_HAS_JOURNAL) != 0) {
 		id->type = "ext3";
-	else
-		id->type = "ext2";
+		goto out;
+	}
+
+	id->type = "ext2";
 
+out:
 	return 0;
 }
-- 
1.7.0.4

